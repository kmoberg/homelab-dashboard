"""Add AircraftType, Airline, AirlineHub tables, and normalize Aircraft

Revision ID: 7692e335697c
Revises: 393866c3c6c7
Create Date: 2025-02-07 14:55:47.118635

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7692e335697c'
down_revision = '393866c3c6c7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aircraft_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_code', sa.String(length=10), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('engines', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_code')
    )
    op.create_table('airline',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('iata_code', sa.String(length=3), nullable=False),
    sa.Column('icao_code', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iata_code'),
    sa.UniqueConstraint('icao_code')
    )
    op.create_table('airline_hub',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('airline_id', sa.Integer(), nullable=False),
    sa.Column('airport_code', sa.String(length=4), nullable=False),
    sa.Column('hub_type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['airline_id'], ['airline.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Add new columns as nullable first
    with op.batch_alter_table('aircraft', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('operator_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'airline', ['operator_id'], ['id'])
        batch_op.create_foreign_key(None, 'aircraft_type', ['type_id'], ['id'])

    # Populate default values for existing rows
    op.execute("""
        INSERT INTO aircraft_type (type_code, manufacturer, model_name)
        VALUES ('UNKNOWN', 'UNKNOWN', 'UNKNOWN')
        ON CONFLICT DO NOTHING
    """)
    op.execute("""
        INSERT INTO airline (iata_code, icao_code, name)
        VALUES ('UNK', 'UNK', 'Unknown Airline')
        ON CONFLICT DO NOTHING
    """)
    op.execute("""
        UPDATE aircraft
        SET type_id = (SELECT id FROM aircraft_type WHERE type_code = 'UNKNOWN' LIMIT 1),
            operator_id = (SELECT id FROM airline WHERE iata_code = 'UNK' LIMIT 1)
    """)

    # Make the new columns non-nullable
    with op.batch_alter_table('aircraft', schema=None) as batch_op:
        batch_op.alter_column('type_id', nullable=False)
        batch_op.alter_column('operator_id', nullable=False)

    # Drop old columns
    with op.batch_alter_table('aircraft', schema=None) as batch_op:
        batch_op.drop_column('model')
        batch_op.drop_column('operator')
        batch_op.drop_column('ac_type')
        batch_op.drop_column('engines')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aircraft', schema=None) as batch_op:
        batch_op.add_column(sa.Column('engines', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ac_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('operator', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('model', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('operator_id')
        batch_op.drop_column('type_id')

    op.drop_table('airline_hub')
    op.drop_table('airline')
    op.drop_table('aircraft_type')
    # ### end Alembic commands ###